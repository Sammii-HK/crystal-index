// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  sessions          Session[]
  createdCrystals   Crystal[]  @relation("createdBy")
  favouriteCrystals Crystal[]  @relation("favouriteCrystals")
  role              String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// CRYSTALS
model Crystal {
  id                Int      @default(autoincrement()) @id
  createdById       String
  createdBy         User     @relation("createdBy", fields: [createdById], references: [id])
  name              String
  bio               String?
  otherNames        String?
  colour            String[]
  chakra            String[]
  createdAt         DateTime   @default(now()) @map(name: "created_at")
  updatedAt         DateTime   @default(now()) @map(name: "updated_at")
  memento           String?
  mementoLocation   Location?  @relation("memento", fields: [memento], references: [placeName])
  origin            String?
  originLocation    Location?  @relation("origin", fields: [origin], references: [placeName])
  favouritedBy      User[]     @relation("favouriteCrystals")
  image             Image[]
}

model Location {
  id                  Int         @default(autoincrement()) @id
  placeName           String      @unique
  city                String?
  county              String?
  country             String
  lat                 String
  long                String
  crystalsOfMemento   Crystal[]   @relation("memento")
  crystalsOfOrigin    Crystal[]   @relation("origin")
}

model Image {
  id         Int      @default(autoincrement()) @id
  name       String
  type       String
  file       Bytes
  crystalId  Int?     
  crystal    Crystal?  @relation(fields: [crystalId], references: [id])
}
