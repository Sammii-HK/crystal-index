version: "3.9"
services:
  crystalsfrontend:
    container_name: crystalsfrontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - crystalsbackend
    ports:
      - 80:80
  crystalsbackend:
    container_name: crystalsbackend
    build:
      context: .
      target: production
      dockerfile: Dockerfile.backend
    depends_on:
      - crystalsdb
    environment:
      NODE_ENV: production
      DB_HOST: ${DB_HOST}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    command: bash -c "npx wait-port crystalsdb:5432; npx sequelize-cli db:migrate; node server.js"
  crystalsdb:
    container_name: crystalsdb
    image: postgres
    restart: always
    environment:
      NODE_ENV: production
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: crystal_index_db
    volumes:
      # Persist the data between container invocations
      - /home/pi/crystal-index/data:/var/lib/postgresql/data
volumes:
  data:

# sudo chown -R pi:pi data; sudo chmod -R 777 data; 

  # command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs
  #    environment:
  #      # Provide the password via an environment variable. If the variable is unset or empty, use a default password
  #      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-4WXUms893U6j4GE&Hvk3S*hqcqebFgo!vZi}
  #    # If on a non-Linux OS, make sure you share the drive used here. Go to Docker's settings -> Shared Drives
  #    volumes:
  #      - ./logs:/logs

