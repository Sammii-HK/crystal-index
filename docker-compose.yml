version: "3.9"
services:
  crystalsfrontend:
    container_name: crystalsfrontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - crystalsbackend
    ports:
      - 80:80
  crystalsbackend:
    container_name: crystalsbackend
    build:
      context: .
      target: production
      dockerfile: Dockerfile.backend
    depends_on:
      - crystalsdb
    environment:
      DB_HOST: crystalsdb
      DB_USERNAME: docker
      DB_PASSWORD: docker
    command: bash -c "npx wait-port crystalsdb:5432; npx sequelize-cli db:migrate; node server.js"
  crystalsdb:
    container_name: crystalsdb
    image: postgres
    build:
      context: .
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: crystal_index_db
    # command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs
    volumes:
      # Persist the data between container invocations
      - crystalsdb:/var/lib/postgresql/data
      # - ./data:/var/lib/postgresql/data
      # volumes: [
      #   './data:/var/lib/postgresql/data',
      #   './logs:/logs'
      # ]

      # - ./crystal-api:/usr/src/app/crystal-api
      # - crystalsdb:/var/lib/postgresql/data

    # volumes:
    #   - ./data:/var/lib/postgresql/data

  # postgresql:
  #   image: postgres
  #   container_name: pg-docker
  #   ports:
  #     - "5400:5432"
  #   environment:
  #     - POSTGRES_USER=docker
  #     - POSTGRES_PASSWORD=docker
  #   volumes:
  #     - ./postgres.conf:/etc/postgresql/postgresql.conf
  #   command: postgres -c config_file=/etc/postgresql/postgresql.conf
  #   restart: always

  # command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs
  #    environment:
  #      # Provide the password via an environment variable. If the variable is unset or empty, use a default password
  #      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-4WXUms893U6j4GE&Hvk3S*hqcqebFgo!vZi}
  #    # If on a non-Linux OS, make sure you share the drive used here. Go to Docker's settings -> Shared Drives
  #    volumes:
  #      # Persist the data between container invocations
  #      - postgresVolume:/var/lib/postgresql/data
  #      - ./logs:/logs

